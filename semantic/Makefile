# Automatically Generated Makefile by EDE.
# For use with: make
#
# DO NOT MODIFY THIS FILE OR YOUR CHANGES MAY BE LOST.
# EDE is the Emacs Development Environment.
# http://cedet.sourceforge.net/ede.shtml
# 

top=
ede_FILES=Project.ede Makefile

EMACS=emacs
LOADPATH=../common/ ../eieio/ ../ede/ wisent/ bovine/\
   ../common/ ../speedbar/ ../ede/ ../eieio/\
   
LOADDEFS=semantic-al.el
LOADDIRS=. bovine wisent
maintenance_LISP=semantic-ede-grammar.el
EMACS=emacs
wy_MISC=semantic-grammar.wy
scripts_MISC=semanticdb.sh
example_MISC=semantic-example.el
init_LISP=semantic-load.el semantic-autogen.el
semantic_LISP=semantic.el semantic-util.el semantic-ctxt.el semantic-lex.el semantic-edit.el semantic-fw.el semantic-grammar.el semantic-tag.el semantic-find.el semantic-format.el semantic-complete.el semantic-sort.el semantic-decorate.el semantic-tag-file.el semantic-doc.el semantic-tag-ls.el semantic-ast.el
Languages_LISP=semantic-texi.el
tools_LISP=semantic-imenu.el semantic-sb.el working.el semanticdb.el document.el document-vars.el sformat.el semantic-chart.el semantic-util-modes.el semantic-analyze.el semantic-ia.el semantic-cb.el semantic-ia-sb.el semanticdb-file.el semanticdb-search.el semanticdb-mk.el semanticdb-el.el semanticdb-system.el semantic-debug.el semanticdb-find.el semantic-regtest.el
senator_LISP=senator.el
misc_AUX=INSTALL NEWS ChangeLog AUTHORS
VERSION=2.0beta1
DISTDIR=$(top)semantic-$(VERSION)



all: autoloads wy scripts example init semantic Languages tools senator wisent Tests Documentation bovinator

.PHONY: autoloads
autoloads: $(LOADDEFS)
	@echo "(add-to-list 'load-path nil)" > $@-compile-script
	for loadpath in . ${LOADPATH}; do \
	   echo "(add-to-list 'load-path \"$$loadpath\")" >> $@-compile-script; \
	done;
	@echo "(require 'cedet-autogen)" >> $@-compile-script
	$(EMACS) -batch -l $@-compile-script -f cedet-batch-update-autoloads $(LOADDEFS) $(LOADDIRS)

.PHONY: maintenance
maintenance: $(maintenance_LISP)
	@echo "(add-to-list 'load-path nil)" > $@-compile-script
	for loadpath in . ${LOADPATH}; do \
	   echo "(add-to-list 'load-path \"$$loadpath\")" >> $@-compile-script; \
	done;
	@echo "(setq debug-on-error t)" >> $@-compile-script
	$(EMACS) -batch -l $@-compile-script -f batch-byte-compile $^

wy: 
	@

scripts: 
	@

example: 
	@

.PHONY: init
init: $(init_LISP)
	@echo "(add-to-list 'load-path nil)" > $@-compile-script
	for loadpath in . ${LOADPATH}; do \
	   echo "(add-to-list 'load-path \"$$loadpath\")" >> $@-compile-script; \
	done;
	@echo "(setq debug-on-error t)" >> $@-compile-script
	$(EMACS) -batch -l $@-compile-script -f batch-byte-compile $^

.PHONY: semantic
semantic: $(semantic_LISP)
	@echo "(add-to-list 'load-path nil)" > $@-compile-script
	for loadpath in . ${LOADPATH}; do \
	   echo "(add-to-list 'load-path \"$$loadpath\")" >> $@-compile-script; \
	done;
	@echo "(setq debug-on-error t)" >> $@-compile-script
	$(EMACS) -batch -l $@-compile-script -f batch-byte-compile $^

.PHONY: Languages
Languages: $(Languages_LISP)
	@echo "(add-to-list 'load-path nil)" > $@-compile-script
	for loadpath in . ${LOADPATH}; do \
	   echo "(add-to-list 'load-path \"$$loadpath\")" >> $@-compile-script; \
	done;
	@echo "(setq debug-on-error t)" >> $@-compile-script
	$(EMACS) -batch -l $@-compile-script -f batch-byte-compile $^

.PHONY: tools
tools: $(tools_LISP)
	@echo "(add-to-list 'load-path nil)" > $@-compile-script
	for loadpath in . ${LOADPATH}; do \
	   echo "(add-to-list 'load-path \"$$loadpath\")" >> $@-compile-script; \
	done;
	@echo "(setq debug-on-error t)" >> $@-compile-script
	$(EMACS) -batch -l $@-compile-script -f batch-byte-compile $^

.PHONY: senator
senator: $(senator_LISP)
	@echo "(add-to-list 'load-path nil)" > $@-compile-script
	for loadpath in . ${LOADPATH}; do \
	   echo "(add-to-list 'load-path \"$$loadpath\")" >> $@-compile-script; \
	done;
	@echo "(setq debug-on-error t)" >> $@-compile-script
	$(EMACS) -batch -l $@-compile-script -f batch-byte-compile $^

.PHONY:wisent
wisent:
	cd wisent; $(MAKE)

.PHONY:Tests
Tests:
	cd tests; $(MAKE)

.PHONY:Documentation
Documentation:
	cd doc; $(MAKE)

.PHONY:bovinator
bovinator:
	cd bovine; $(MAKE)

tags: 
	cd wisent/; make $@
	cd tests/; make $@
	cd doc/; make $@
	cd bovine/; make $@


clean:
	rm -f *.elc


dist:
	rm -rf $(DISTDIR)
	mkdir $(DISTDIR)
	cp $(LOADDEFS) $(maintenance_LISP) $(wy_MISC) $(scripts_MISC) $(example_MISC) $(init_LISP) $(semantic_LISP) $(Languages_LISP) $(tools_LISP) $(senator_LISP) $(misc_AUX) $(ede_FILES) $(DISTDIR)
	cd wisent; $(MAKE) dist
	cd tests; $(MAKE) dist
	cd doc; $(MAKE) dist
	cd bovine; $(MAKE) dist
	tar -cvzf $(DISTDIR).tar.gz $(DISTDIR)
	rm -rf $(DISTDIR)

Makefile: Project.ede
	@echo Makefile is out of date!  It needs to be regenerated by EDE.
	@false



# End of Makefile
