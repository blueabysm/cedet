### wisent-calc.bnf --- Grammar of the infix notation calculator

## Copyright (C) 2001 David Ponce

## Author: David Ponce <david@dponce.com>
## Maintainer: David Ponce <david@dponce.com>
## Created: 11 Sep 2001
## Keywords: syntax
## X-RCS: $Id: wisent-calc.bnf,v 1.1 2001-09-12 08:19:10 ponced Exp $

## This file is not part of GNU Emacs.

## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2, or (at
## your option) any later version.

## This program is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program; see the file COPYING.  If not, write to
## the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
## Boston, MA 02111-1307, USA.

### Commentary:
##
## This is a port of the Bison 1.28d Infix Calc sample program to the
## elisp LALR parser Wisent.  It illustrates usage of operator
## precedence and contextual precedence.  Implementation is in the
## file wisent-calc.el.

### History:
## 

# --------
# Settings
# --------
%parsermode    lalr ## Generate tables for the LALR parser
%outputfile    wisent-calc.el
%parsetable    wisent-calc-parser-tables
%tokentable    wisent-calc-tokens

# These settings are needed by the Semantic BNF converter but are not
# used by the calculator.
%languagemode  fundamental-mode
%keywordtable  wisent-calc-keywords
%setupfunction wisent-calc-default-setup

# Terminals
%token NUM     literal ""
%token NEG     dummy   ""

%token NL      punctuation ";"
%token EQ      punctuation "="
%token PLUS    punctuation "+"
%token MINUS   punctuation "-"
%token MULT    punctuation "*"
%token DIV     punctuation "/"
%token EXP     punctuation "^"
%token LPAREN  punctuation "("
%token RPAREN  punctuation ")"

# Precedence
%nonassoc EQ;  # comparison
%left     PLUS MINUS;
%left     MULT DIV;
%left     NEG; # negation--unary minus
%right    EXP; # exponentiation

# The grammar
input:
    EMPTY
    (identity "")
  | input line
    (format "%s%s" $1 $2)
  ;

line:
    NL
    (format "%s " $1)
  | exp NL
    (format "%s%s " $1 $2)
  ;

exp:
    NUM
  | exp EQ exp
    (progn
      (if (not (= $1 $3))
          (message "wisent-calc error: %d != %d" $1 $3))
      (= $1 $3))
  | exp PLUS exp
    (+ $1 $3)
  | exp MINUS exp
    (- $1 $3)
  | exp MULT exp
    (* $1 $3)
  | exp DIV exp
    (/ $1 $3)
  | MINUS exp %prec NEG
    (- $2)
  | exp EXP exp
    (expt $1 $3)
  | LPAREN exp RPAREN
    (identity $2)
  ;

### wisent-calc.bnf ends here
